{"version":3,"sources":["redux/actions/userActions.js","redux/reducers/userReducer.js","redux/actions/loginActions.js","redux/reducers/loginReducer.js","redux/reducers/routeReducer.js","redux/reducers/checkpointReducer.js","redux/reducers/playgroundReducer.js","redux/reducers/parksInStateReducer.js","redux/reducers/usernamesReducer.js","redux/reducers/proxyReducer.js","redux/reducers/APIkeyReducer.js","redux/reducers/index.js","components/ProtectedRoute/ProtectedRoute.js","components/Header/Header.js","components/NavGuest/NavGuest.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/Nav/Nav.js","components/UserPage/UserPage.js","auxiliaryFunctions/distanceBetweenPoints.js","redux/actions/playgroundActions.js","components/Map/Map.js","auxiliaryFunctions/milesToMeters.js","components/SearchForm/SearchForm.js","components/SearchPage/SearchPage.js","components/AddPlaygroundMap/AddPlaygroundMap.js","components/AddPlaygroundPage/AddPlaygroundPage.js","components/StateMap/StateMap.js","components/searchByStatePage/searchByStatePage.js","App.js","redux/sagas/userSaga.js","redux/requests/userRequests.js","redux/requests/loginRequests.js","redux/sagas/loginSaga.js","redux/requests/playgroundRequests.js","redux/sagas/playgroundSaga.js","redux/sagas/usernamesSaga.js","redux/sagas/APIkeySaga.js","redux/sagas/index.js","index.js"],"names":["USER_ACTIONS","FETCH_USER","SET_USER","UNSET_USER","REQUEST_START","REQUEST_DONE","LOGOUT","USER_FETCH_FAILED","combineReducers","id","state","arguments","length","undefined","action","type","user","userName","username","isLoading","LOGIN_ACTIONS","LOGIN","CLEAR_LOGIN_ERROR","LOGIN_REQUEST_DONE","LOGIN_FAILED","LOGIN_FAILED_NO_CODE","INPUT_ERROR","triggerLogin","password","payload","triggerLogout","message","route","checkpoints","playgrounds","Object","toConsumableArray","concat","parksInState","usernames","proxyReducer","APIkey","store","login","proxy","ProtectedRoute","ProtectedComponent","ComponentToProtect","this","props","component","loginPending","react_default","a","createElement","Redirect","to","Route","path","render","Component","connect","Header","_ref","title","className","NavGuest","Link","LoginPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","dispatch","history","push","handleInputChangeFor","propertyName","setState","defineProperty","target","value","role","components_NavGuest_NavGuest","renderAlert","onSubmit","style","color","htmlFor","name","onChange","RegisterPage","registerUser","body","axios","post","then","response","status","catch","Nav","clearStore","console","log","logout","width","marginRight","marginLeft","onClick","React","UserPage","content","components_Nav_Nav","toRadians","degrees","Math","PI","distanceBetweenPoints","point1","point2","phi1","lat","phi2","dPhi","dLambda","lng","asin","sqrt","pow","sin","cos","PLAYGROUND_ACTIONS","CLEAR_PLAYGROUNDS","SEARCH_PLAYGROUNDS","photo","Map","selectedMarker","address","waypoints","instructions","directions","componentDidMount","routesEqual","route1","route2","origin","destination","radius","onMarkerClick","playground","get","data","objectSpread","description","user_id","photo_reference","photoReference","google","maps","Geocoder","geocode","placeId","results","address_components","filter","types","short_name","formatted_address","window","alert","plotRouteAndParks","DirectionsService","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","polyline","Polyline","legs","routes","i","steps","j","nextSegment","k","getPath","keys","latLngs","stepBeginning","lastSearch","searchAt","stepEnd","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","step","err","return","error","addPark","location","routeWithWaypoints","map","waypoint","optimizeWaypoints","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","leg","text","distance","finalStep","strip","html","tmp","document","innerHTML","tempString","textContent","innerText","addSpaceObject","Destination","Continue","Entering","Pass","replace","matchedString","switchProxy","prevProps","_this2","lib","defaultCenter","defaultZoom","index","key","position","checkpoint","center","options","fillOpacity","strokeColor","strokeOpacity","size","textAlign","src","alt","maxWidth","margin","background","instruction","withScriptjs","withGoogleMap","milesToMeters","miles","SearchForm","submitted","handleChange","property","handleSubmit","placeholder","SearchPage","url","components_SearchForm_SearchForm","components_Map_Map","googleMapURL","loadingElement","height","containerElement","mapElement","AddPlaygroundMap","selectedState","center_lat","center_lng","zoom","mapClicked","allStates","handleClick","latLng","gmap","max","handleStateSelection","postal_code","added_by","toast","success","POSITION","BOTTOM_RIGHT","Number","ref","googleMap","react_select_esm","label","full_name","option","display","toFixed","readOnly","rows","cols","form","react_toastify_lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","components_AddPlaygroundMap_AddPlaygroundMap","StateMap","selectedPark","addDescription","initialRender","componentWillReceiveProps","nextProps","parks","currentParkIndex","descriptionUpdated","thisPropsDescriptions","nextPropsDescriptions","waitToDisplay","setTimeout","info","park","latitude","longitude","setDescription","firstReview","userId","searchByStatePage","components_StateMap_StateMap","App","components_Header_Header","HashRouter","Switch","exact","from","components_ProtectedRoute_ProtectedRoute","AddPlaygroundPage","SearchByStatePage","fetchUser","userSaga","regenerator_default","wrap","_context","prev","put","headers","Content-Type","withCredentials","sent","t0","stop","_marked","_context2","takeLatest","_marked2","callLogin","loginUser","logoutUser","loginSaga","loginSaga_marked","loginSaga_marked2","_context3","_marked3","proxies","searchNearby","proxyIndex","searchParks","postPlayground","getParksInState","playgroundSaga","trimDownPlayground","photos","geometry","place_id","proxyToUse","playgroundObject","allInfoOnPlaygrounds","filteredPlaygrounds","select","pg","includes","playgroundSaga_marked","playgroundSaga_marked2","playgroundSaga_marked3","_context4","_marked4","_context5","takeEvery","_marked5","getUsernames","usernamesSaga","usernameObject","usernamesSaga_marked","usernamesSaga_marked2","getAPIkey","APIkeySaga","APIkeySaga_marked","APIkeySaga_marked2","rootSaga","all","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","apply","run","ReactDOM","react_redux_es","src_App","getElementById"],"mappings":"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","file":"static/js/main.c4627fc8.chunk.js","sourcesContent":["\n//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const USER_ACTIONS = {\n  FETCH_USER: 'FETCH_USER',\n  SET_USER: 'SET_USER_ACTION',\n  UNSET_USER: 'UNSET_USER_ACTION',\n  REQUEST_START: 'REQUEST_START_USER_ACTION',\n  REQUEST_DONE: 'REQUEST_DONE_USER_ACTION',\n  LOGOUT: 'LOGOUT',\n  USER_FETCH_FAILED: 'USER_FETCH_FAILED',\n};\n\n\n","import { combineReducers } from 'redux';\nimport { USER_ACTIONS } from '../actions/userActions';\n\n//id holds onto the user.id from passport/database\nconst id = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.id || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n//userName holds onto the user.username from passport/database\nconst userName = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.username || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.REQUEST_START:\n      return true;\n    case USER_ACTIONS.REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys id, username, isLoading\nexport default combineReducers({\n  id,\n  userName,\n  isLoading,\n});\n","//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const LOGIN_ACTIONS = {\n  LOGIN: 'LOGIN',\n  CLEAR_LOGIN_ERROR: 'CLEAR_LOGIN_ERROR',\n  REQUEST_START: 'REQUEST_START',\n  LOGIN_REQUEST_DONE: 'LOGIN_REQUEST_DONE',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n  LOGIN_FAILED_NO_CODE: 'LOGIN_FAILED_NO_CODE',\n  INPUT_ERROR: 'INPUT_ERROR',\n  LOGOUT: 'LOGOUT',\n};\n\n//These are functions - each returns an action.\n//You could call one an action creator.\nexport const clearError = () => ({\n  type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR,\n});\n\n\nexport const triggerLogin = (username, password) => ({\n  type: LOGIN_ACTIONS.LOGIN,\n  payload: {\n    username,\n    password,\n  },\n});\n\nexport const triggerLogout = () => ({\n  type: LOGIN_ACTIONS.LOGOUT,\n});\n\nexport function formError() {\n  return {\n    type: LOGIN_ACTIONS.INPUT_ERROR,\n    payload: 'Enter your username and password!',\n  };\n}\n","import { combineReducers } from 'redux';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\n\n//message holds the string that will display on the login screen if there's an error\nconst message = (state = '', action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.CLEAR_LOGIN_ERROR:\n      return '';\n    case LOGIN_ACTIONS.LOGIN_FAILED:\n      return 'Ooops! The username and password didn\\'t match. Try again!';\n    case LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE:\n      return 'Ooops! Something went wrong! Is the server running?';\n    case LOGIN_ACTIONS.INPUT_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.REQUEST_START:\n      return true;\n    case LOGIN_ACTIONS.LOGIN_REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys message, isLoading\nexport default combineReducers({\n  isLoading,\n  message,\n});\n","const route = (state={}, action) => {\n    switch (action.type) {\n        case 'SET_ROUTE':\n            return action.payload;\n        case 'CLEAR_ROUTE':\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport default route;","const checkpoints = (state = [], action) => {\n    switch (action.type) {\n        case `SET_CHECKPOINTS`:\n            return action.payload;\n        case 'CLEAR_CHECKPOINTS':\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default checkpoints;","\nconst playgrounds = (state=[], action) => {\n    switch (action.type) {\n        case 'SET_PLAYGROUNDS':\n            return [...state, ...action.payload];\n        case `CLEAR_PLAYGROUNDS`:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default playgrounds;","\nconst parksInState = (state=[], action) => {\n    switch (action.type) {\n        case 'SET_PARKS':\n            return action.payload;\n        case `CLEAR_PARKS`:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default parksInState;","const usernames = (state=[],action) =>{\n    switch (action.type) {\n        case 'SET_USERNAMES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default usernames;","const proxyReducer = (state=0,action) => {\n    switch (action.type) {\n        case 'SWITCH_PROXY':\n            return (state+1)%3;\n        default:\n            return state;\n    }\n}\n\nexport default proxyReducer;","const APIkey = (state = '', action) => {\n    switch (action.type) {\n        case `SET_API_KEY`:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default APIkey;","import { combineReducers } from 'redux';\nimport user from './userReducer';\nimport login from './loginReducer';\nimport route from './routeReducer';\nimport checkpoints from './checkpointReducer';\nimport playgrounds from './playgroundReducer';\nimport parksInState from './parksInStateReducer';\nimport usernames from './usernamesReducer';\nimport proxy from './proxyReducer';\nimport APIkey from './APIkeyReducer';\n\n//Lets make a bigger object for our store, with the objects from our reducers.\n//This is why we get this.props.reduxStore.user.isLoading\nconst store = combineReducers({\n  user,\n  login,\n  route,\n  APIkey,\n  checkpoints,\n  playgrounds,\n  parksInState,\n  usernames,\n  proxy,\n});\n\nexport default store;\n","import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\n//A Custom Wrapper Component -- This will keep our code DRY.\n//Responsible for watching redux state, and returning an appropriate component\n//API for this component is the same as a regular route\nclass ProtectedRoute extends Component {\n\n  render() {\n      let ComponentToProtect = this.props.component\n      let ProtectedComponent;\n      if(this.props.loginPending || this.props.user.isLoading ) {\n        ProtectedComponent = <p>LOADING...</p>\n      } else if (!this.props.user.isLoading && !this.props.user.id) {\n        ProtectedComponent = <Redirect to=\"/home\"></Redirect>\n      } else {\n        ProtectedComponent = <ComponentToProtect />\n      }\n\n      return (\n          <Route\n            path={this.props.path}\n            render={() => {\n              return ProtectedComponent\n              }\n            }\n          />\n      )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginPending: state.login.isLoading\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\n//title is being destructured from props\nconst Header = ({ title }) => (\n  <div className=\"instructions\">\n    <div>\n      <h1 className=\"lead\">{ title }</h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavGuest = () => (\n  <div className=\"navbar\">\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/search\">\n            Search Page\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/search_by_State\">\n            Search by State\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/add_playground\">\n            Add Playground\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default NavGuest;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { triggerLogin, formError, clearError } from '../../redux/actions/loginActions';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport NavGuest from '../NavGuest/NavGuest';\n\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  login: state.login,\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username === '' || this.state.password === '') {\n      this.props.dispatch(formError());\n    } else {\n      this.props.dispatch(triggerLogin(this.state.username, this.state.password));\n      this.props.history.push('/search')\n    }\n  }\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  renderAlert() {\n    if (this.props.login.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n        >\n          {this.props.login.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavGuest />\n        {this.renderAlert()}\n        <form onSubmit={this.login} style={{color: 'black'}}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n            <Link to=\"/register\">Register</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n    };\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        message: 'Choose a username and password!',\n      });\n    } else {\n      const body = {\n        username: this.state.username,\n        password: this.state.password,\n      };\n\n      // making the request to the server to post the new user's registration\n      axios.post('/api/user/register/', body)\n        .then((response) => {\n          if (response.status === 201) {\n            this.props.history.push('/home');\n          } else {\n            this.setState({\n              message: 'Ooops! That didn\\'t work. The username might already be taken. Try again!',\n            });\n          }\n        })\n        .catch(() => {\n          this.setState({\n            message: 'Ooops! Something went wrong! Is the server running?',\n          });\n        });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  renderAlert() {\n    if (this.state.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n          style={{color: 'black'}}\n        >\n          {this.state.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderAlert()}\n        <form onSubmit={this.registerUser} style={{color: 'black'}}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n            <Link to=\"/home\">Cancel</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { triggerLogout } from '../../redux/actions/loginActions';\n\n\nclass Nav extends React.Component {\n\n  clearStore = () => {\n    console.log('Clear reduxStore');\n    this.props.dispatch({ type: 'CLEAR_PLAYGROUNDS' });\n    this.props.dispatch({ type: 'CLEAR_PARKS' });\n    this.props.dispatch({ type: 'CLEAR_CHECKPOINTS' });\n    this.props.dispatch({ type: 'CLEAR_ROUTE' });\n  }\n\n  logout = () => {\n    this.props.dispatch(triggerLogout());\n  }\n\n  render() {\n    return (<div style={{\n      width: '40%',\n      marginRight: 'auto',\n      marginLeft: '30%',\n    }}>\n      <div>\n        <ul>\n          {this.props.user.userName ?\n            //     <li >\n            //       <Link to=\"/user\" onClick={this.clearStore}>\n            //         User Home\n            // </Link>\n            //     </li> \n            <li></li> :\n            <li>\n              <Link to=\"/\">\n                Login\n      </Link>\n            </li>\n          }\n\n            <li >\n              <Link to=\"/search\" onClick={this.clearStore}>\n                Search Page\n        </Link>\n            </li> \n\n            <li>\n              <Link to=\"/search_by_State\" onClick={this.clearStore}>\n                Search by State\n        </Link>\n            </li> \n\n          <li>\n            <Link to=\"/add_playground\" onClick={this.clearStore}>\n              Add Playground\n          </Link>\n          </li>\n          {this.props.user.userName &&\n            <li onClick={this.logout}>\n              <Link to=\"/\" onClick={this.clearStore}>\n                Logout\n            </Link>\n            </li>}\n        </ul>\n      </div>\n    </div>)\n  }\n};\n\nconst mapReduxStateToProps = (state) => {\n  return { user: state.user };\n}\n\nexport default connect(mapReduxStateToProps)(Nav);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import AutoCompleteComponent from '../AutoCompleteComponent/AutoCompleteComponent';\n\nimport Nav from '../../components/Nav/Nav';\n\n// import { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { triggerLogout } from '../../redux/actions/loginActions';\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nclass UserPage extends Component {\n  logout = () => {\n    this.props.dispatch(triggerLogout());\n  }\n\n  render() {\n    let content = null;\n\n    if (this.props.user.userName) {\n      // if(true){\n      content = (\n        <div>\n          <h1\n            id=\"welcome\"\n          >\n            Welcome, { this.props.user.userName }!\n          </h1>\n          <p>Your ID is: {this.props.user.id}</p>\n          <button\n            onClick={this.logout}\n          >\n            Log Out\n          </button>\n          {/* <AutoCompleteComponent /> */}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Nav />\n        { content }\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n\n","let toRadians = (degrees) => {\n    return degrees * Math.PI / 180;\n}\n\n\n//this function takes in two 'points' as arguments, where each \n//'point' is an object with a 'lng' and 'lat' property\n\n/*\nlet pythagorean = (a, b) => {\n    return Math.sqrt(a * a + b * b) * 6371000;\n}\nThis just uses the pythagorean theorem\nlet distanceBetweenPoints = (point1, point2) => {\n    let deltaX = toRadians(point1.lng) - toRadians(point2.lng);\n    let deltaY = toRadians(point1.lat) - toRadians(point2.lat);\n    return pythagorean(deltaX, deltaY);\n}\n*/\n\n\n//This is the Haversine formula\nlet distanceBetweenPoints = (point1, point2) => {\n    let phi1 = toRadians(point1.lat);\n    let phi2 = toRadians(point2.lat);\n    let lambda1 = toRadians(point1.lng);\n    let lambda2 = toRadians(point2.lng);\n    let dPhi = phi1 - phi2;\n    let dLambda = lambda1 - lambda2;\n    let dSigma = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(dPhi / 2), 2) + Math.cos(phi1) * Math.cos(phi2) * Math.pow(Math.sin(dLambda / 2), 2)));\n    return dSigma * 6371000;\n}\n\nexport default distanceBetweenPoints;","export const PLAYGROUND_ACTIONS = {\n    CLEAR_PLAYGROUNDS: 'CLEAR_PLAYGROUNDS',\n    SEARCH_PLAYGROUNDS: 'SEARCH_PLAYGROUNDS',\n  };","/* global google */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker, DirectionsRenderer, Circle } from \"react-google-maps\";\nimport distanceBetweenPoints from '../../auxiliaryFunctions/distanceBetweenPoints';\nimport { PLAYGROUND_ACTIONS } from '../../redux/actions/playgroundActions';\nimport axios from 'axios';\n\nconst mapStateToProps = state => ({\n    state,\n});\n\n//we give our photos a default image\nlet photo = 'https://causeofaction.org/wp-content/uploads/2013/09/Not-available.gif';\n\nclass Map extends Component {\n\n    state = {\n        selectedMarker: {},\n        address: '',\n        waypoints: [],\n        instructions: [],\n        directions: {},\n    }\n\n    componentDidMount = () => {\n        if (this.props.state.usernames.length === 0) {\n            this.props.dispatch({ type: 'GET_USERNAMES' });\n        }\n    }\n\n    routesEqual = (route1, route2) => {\n        return route1.origin === route2.origin && route1.destination === route2.destination && route1.radius === route2.radius;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.routesEqual(prevProps.state.route, this.props.state.route)) {\n            return null;\n        } else {\n            this.plotRouteAndParks(this.props.state.route);\n        }\n    }\n\n    onMarkerClick = (playground) => {\n        // console.log('You clicked on:', playground);\n        this.setState({ selectedMarker: playground });\n        //first we check if the park is already in the database\n        axios.get(`/api/park/check_database/${playground.id}`).then((response) => {\n            if (response.data.length > 0) {//if already in the database, get the description and user_id info\n                console.log('Park is already in the database!');\n                this.setState({\n                    selectedMarker: {\n                        ...playground,\n                        description: response.data[0].description,\n                        user_id: response.data[0].user_id\n                    }\n                });\n                photo = response.data[0].photo_reference;\n            }\n            //then post it to the database with info from Geocoder (the server will check first \n            //if it's already in the database)\n            //get the associated photo\n            if (playground.photoReference) {\n                photo = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${playground.photoReference}&sensor=false&key=${this.props.state.APIkey}`;\n            } else {\n                photo = 'https://causeofaction.org/wp-content/uploads/2013/09/Not-available.gif';\n            }\n            //get the state\n            let geocoder = new google.maps.Geocoder();\n            geocoder.geocode({ 'placeId': playground.id }, (results, status) => {\n                if (status === 'OK') {\n                    if (results[0]) {\n                        console.log('results:', results)\n                        let state = results[0].address_components.filter(component => component.types[0] === 'administrative_area_level_1')[0].short_name;\n                        console.log('State:', state);\n                        this.props.dispatch({ type: 'POST_PLAYGROUND', payload: { ...playground, photoReference: photo, state: state } })\n                        this.setState({ address: results[0].formatted_address });\n                    } else {\n                        window.alert('No results found');\n                    }\n                } else {\n                    window.alert('Geocoder failed due to: ' + status);\n                }\n            })\n\n        })\n        // if (databaseResult() > 0) {\n        // }\n        // else {\n        //     //get the associated photo\n        //     if (playground.photoReference) {\n        //         photo = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${playground.photoReference}&sensor=false&key=${this.props.state.APIkey}`;\n        //     } else {\n        //         photo = 'https://causeofaction.org/wp-content/uploads/2013/09/Not-available.gif';\n        //     }\n        //     //get the state\n        //     let geocoder = new google.maps.Geocoder;\n        //     geocoder.geocode({ 'placeId': playground.id }, (results, status) => {\n        //         if (status === 'OK') {\n        //             if (results[0]) {\n        //                 console.log('results:', results)\n        //                 let state = results[0].address_components.filter(component => component.types[0] === 'administrative_area_level_1')[0].short_name;\n        //                 console.log('State:', state);\n        //                 this.props.dispatch({ type: 'POST_PLAYGROUND', payload: { ...playground, photoReference: photo, state: state } })\n        //                 this.setState({ address: results[0].formatted_address });\n        //             } else {\n        //                 window.alert('No results found');\n        //             }\n        //         } else {\n        //             window.alert('Geocoder failed due to: ' + status);\n        //         }\n        //     })\n        // }\n    }\n\n    plotRouteAndParks = (route) => {\n        const DirectionsService = new google.maps.DirectionsService();\n        DirectionsService.route({\n            origin: route.origin,\n            destination: route.destination,\n            travelMode: google.maps.TravelMode.DRIVING\n        }, (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\n                this.setState({\n                    directions: result\n                });\n                let polyline = new google.maps.Polyline({\n                    path: [],\n                });\n                // console.log(result);\n                let legs = result.routes[0].legs;\n                for (let i = 0; i < legs.length; i++) {\n                    let steps = legs[i].steps;\n                    for (let j = 0; j < steps.length; j++) {\n                        let nextSegment = steps[j].path;\n                        for (let k = 0; k < nextSegment.length; k++) {\n                            polyline.getPath().push(nextSegment[k]);\n                        }\n                    }\n                }\n                // console.log('Polyline:', polyline);\n                console.log('Polyline keys:', Object.keys(polyline.latLngs));\n\n                // we initialize our checkpoints with the first latLng from polyline\n                let lastSearch = { lat: polyline.latLngs.j[0].j[0].lat(), lng: polyline.latLngs.j[0].j[0].lng() };\n                let distanceTraveledMeters = 0;\n                let searchAt = []; //an array of coordinates at which to search\n                let stepBeginning; //we keep track of each beginning/end of each step of the trip\n                let stepEnd = lastSearch;\n                for (let step of polyline.latLngs.j[0].j) {\n                    stepBeginning = stepEnd;\n                    stepEnd = { lat: step.lat(), lng: step.lng() };\n                    let segmentDistance = distanceBetweenPoints(stepEnd, stepBeginning);\n                    distanceTraveledMeters = distanceTraveledMeters + segmentDistance;\n                    if (distanceBetweenPoints(stepEnd, lastSearch) > route.radius * 1.5) {\n                        lastSearch = stepEnd;\n                        searchAt.push(lastSearch);\n                        this.setState({ searchAt: [...searchAt, lastSearch] });\n                        this.props.dispatch({ type: PLAYGROUND_ACTIONS.SEARCH_PLAYGROUNDS, payload: lastSearch, radius: route.radius });\n                    }\n                }\n                console.log('We search at:', searchAt);\n                // console.log('polyline.latLngs.b[0].b', polyline.latLngs.j[0].j);\n                this.props.dispatch({ type: 'SET_CHECKPOINTS', payload: searchAt });\n            } else {\n                console.error(`error fetching directions ${result}`);\n            }\n        });\n    }\n\n\n    addPark = () => {\n        this.setState({ waypoints: [...this.state.waypoints, { location: this.state.address, name: this.state.selectedMarker.name }] });\n    }\n\n    //Once we've added some waypoints this function will recalculate the new route\n    routeWithWaypoints = (route) => {\n        const DirectionsService = new google.maps.DirectionsService();\n        DirectionsService.route({\n            origin: route.origin,\n            destination: route.destination,\n            waypoints: this.state.waypoints.map(waypoint => { return { location: waypoint.location } }),\n            optimizeWaypoints: true,\n            travelMode: google.maps.TravelMode.DRIVING\n        }, (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\n                this.props.dispatch({ type: PLAYGROUND_ACTIONS.CLEAR_PLAYGROUNDS });\n                this.setState({\n                    directions: result\n                });\n                console.log(this.state.directions);\n                let legs = result.routes[0].legs;\n                let directions = [];\n                // let waypointsIndex = 0;\n                for (let leg of legs) {\n                    for (let i = 0; i < leg.steps.length; i++) {\n                        if (i === leg.steps.length - 1) {\n                            directions.push({ text: leg.steps[i].instructions, distance: leg.steps[i].distance.text, finalStep: true });\n                            // directions.push({ text: `Arrive at ${this.state.waypoints[waypointsIndex].name}`, distance: null, finalStep: true });\n                            // waypointsIndex++;\n                        } else {\n                            directions.push({ text: leg.steps[i].instructions, distance: leg.steps[i].distance.text, finalStep: false });\n                        }\n                    }\n                }\n                this.setState({ instructions: directions });\n            } else {\n                console.error(`error fetching directions ${result}`);\n            }\n        }\n        )\n    }\n\n    //The directions returned by Google have html elements inside them (like <b>),\n    //so we use this function to remove them and get only the text.\n    strip = (html) => {\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        let tempString = tmp.textContent || tmp.innerText || \"\";\n        //this next bit formats the driving directions since the 'strip' function\n        //ends up pushing together the ends/starts of sentences\n        let addSpaceObject = {\n            \"Destination\": '. Destination',\n            \"Continue\": ' Continue',\n            \"Entering\": '. Entering',\n            \"Pass\": '. Pass'\n        }\n        let formattedInstructions = tempString.replace(/Destination|Continue|Entering|Pass/,\n            function (matchedString) { return addSpaceObject[matchedString] });\n        // return tmp.textContent || tmp.innerText || \"\";\n        return formattedInstructions;\n    }\n\n    switchProxy = () => {\n        this.props.dispatch({ type: 'SWITCH_PROXY' });\n    }\n\n\n    //-----------------------------------------------------------------------------------------------------\n\n    render() {\n\n        return (\n            <div >\n                <div>\n                    <GoogleMap\n                        defaultCenter={this.props.location}\n                        defaultZoom={4}\n                    >\n                        {this.state.directions && <DirectionsRenderer directions={this.state.directions} />}\n                        {/* {this.props.state.checkpoints.map((checkpoint, index) =>\n                            <Marker key={index} position={checkpoint} title={JSON.stringify(checkpoint)} label='Search' />\n                        )} */}\n                        {this.props.state.playgrounds.map((playground, index) =>\n                            <Marker key={index} position={playground.location} title={playground.name} onClick={() => this.onMarkerClick(playground)} />)}\n\n                        {this.props.state.checkpoints.map((checkpoint, index) => <Circle key={index}\n                            center={checkpoint} radius={this.props.state.route.radius} options={{ fillOpacity: \"0.1\", strokeColor: 'green', strokeOpacity: '0.1' }} />)}\n                    </GoogleMap>\n                    <div className=\"container\" >\n                    <br />\n                        <h3 onClick={this.switchProxy} style={{width: '50%', marginLeft: '30%'}}><font size=\"+3\"><b>Click a Marker for More Info</b></font></h3>\n                        <div className=\"row justify-content-between\" >\n                            {/* this.state.selectedMarker.name && */}\n                            {this.state.selectedMarker.name && <div className=\"col-5 card\">\n                                <h4 style={{textAlign: 'center'}}>{this.state.selectedMarker.name}</h4>\n                                <p style={{textAlign: 'center'}}>{this.state.address}</p>\n                                <img src={photo} alt={\"park\"} style={{ maxWidth: \"300px\", margin: 'auto' }} />\n\n                                <br />\n                                <button onClick={this.addPark} className=\"btn btn-secondary\">Add this park to your trip</button>\n                                <br />\n                                <button onClick={() => this.routeWithWaypoints(this.props.state.route)} className=\"btn btn-secondary\">Map your new route</button>\n                                {this.state.waypoints.length>0 &&\n                                    <div style={{ maxWidth: \"300px\", margin: 'auto' }} >\n                                        <p>Parks on Your Route:</p>\n                                        <table>\n                                            <tbody>\n                                            {this.state.waypoints.map((waypoint, index) => <tr key={index}><td>{waypoint.name}</td></tr>)}\n                                            </tbody>\n                                        </table>\n                                    </div>}\n                            </div>}\n                            <br />\n                            {/* this.state.selectedMarker.description && */}\n                            {this.state.selectedMarker.name && <div className=\"col-6 card\" style={{ color: 'black'}}>\n                                <h3 style={{textAlign: 'center'}}>User Reviews</h3>\n                                {/* show all descriptions */}\n                                {this.state.selectedMarker.description &&\n                                    <table><tbody style={{ color: 'black' }}>\n                                        {this.state.selectedMarker.description.map((text, index) => (<div><tr key={index}>\n                                            <td><b><font size=\"+1\">\n                                                {this.props.state.usernames[this.state.selectedMarker.user_id[index] - 1]}\n                                                </font></b></td></tr>\n                                                <tr key={(index + 1) * 100}><td><font size=\"-1\">{text}</font></td></tr>\n                                                <tr key={(index + 2) * 200}><td></td></tr>\n                                                </div>))}\n                                    </tbody></table>}\n                            </div>}\n\n                            {/* <p>Parks at which you are stopping:</p>\n                            <ul>\n                                {this.state.waypoints.map((waypoint, index) => <li key={index}>{JSON.stringify(waypoint.name)}</li>)}\n                            </ul> */}\n                        </div>\n                        {/* <p>Parks currently in waypoints: {JSON.stringify(this.state.waypoints)}</p> */}\n                    </div>\n                    {/* this table shows the directions */}\n                    <table style={{ background: 'linear-gradient(-45deg,green,white)', color: 'black' }} >\n                        <tbody>\n                            {this.state.instructions.map((instruction, index) => {\n                                if (instruction.finalStep) { /*if it's the final step, put text in bold */\n                                    return (<tr key={index}>\n                                        <td><b><font size=\"+2\">{this.strip(instruction.text)}</font></b></td>\n                                        <td>{instruction.distance}</td>\n                                    </tr>);\n                                } else {\n                                    return (<tr key={index}>\n                                        <td>{this.strip(instruction.text)}</td>\n                                        <td>{instruction.distance}</td>\n                                    </tr>);\n                                }\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n                <br />\n                {/* <button onClick={this.switchProxy}>switch proxy</button> */}\n                <br />\n                {/* <pre>{JSON.stringify(this.state, null, 2)}</pre> */}\n            </div>\n        );\n    }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withScriptjs(withGoogleMap(Map)));","const milesToMeters = (miles) => {\n    return miles * 1609.344;\n}\n\nexport default milesToMeters;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PLAYGROUND_ACTIONS } from '../../redux/actions/playgroundActions';\nimport milesToMeters from '../../auxiliaryFunctions/milesToMeters';\n// import Script from 'react-load-script';\n\nclass SearchForm extends Component {\n\n    state = {\n        origin: '',\n        destination: '',\n        radius: 0,\n        submitted: false\n    }\n\n    handleChange = (property) => (event) => {\n        if (property === 'radius') {\n            this.setState({ radius: milesToMeters(event.target.value) })\n        } else {\n            this.setState({ [property]: event.target.value })\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: PLAYGROUND_ACTIONS.CLEAR_PLAYGROUNDS });\n        this.setState({ submitted: !this.state.submitted });\n        this.props.dispatch({ type: 'SET_ROUTE', payload: this.state });\n    }\n\n    // handleScriptLoad = () =>  { \n    //     // Declare Options For Autocomplete \n    //     var options = { types: ['(cities)'] }; \n    //     // Initialize Google Autocomplete \n    //     /*global google*/\n    //     let origin = new google.maps.places.Autocomplete(document.getElementById('origin'),options ); \n    //     let destination = new google.maps.places.Autocomplete(document.getElementById('destination'),options ); \n    //     // Fire Event when a suggested name is selected\n    //     origin.addListener('place_changed', ()=>{this.setState({origin: origin.getPlace().formatted_address})}); \n    //     destination.addListener('place_changed',  ()=>{this.setState({destination: destination.getPlace().formatted_address})}); \n    //   }\n\n   \n\n    render() {\n        return (\n            <div>\n                {/* <Script \n                    url={this.props.url}\n                    onLoad={this.handleScriptLoad}\n                    onError={()=>{console.log('ERROR!')}}\n                /> */}\n                {/* <h2 style={{width: \"50%\", margin: \"auto\"}}>Where are you going?</h2> */}\n                <form onSubmit={this.handleSubmit} className=\"autocomplete\">\n                <h2 style={{ margin: \"auto\", color: 'black'}}>Where are you going?</h2>\n                    <input placeholder=\"Origin\" id=\"origin\" type=\"text\" onChange={this.handleChange('origin')} />\n                    <input placeholder=\"Destination\" id=\"destination\" type=\"text\" onChange={this.handleChange('destination')} /> {/*onChange={this.handleChange('destination')}*/}\n                    <input placeholder=\"Search Radius (miles)\" type=\"number\" onChange={this.handleChange('radius')} />\n                    <input type=\"submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SearchForm);","import React, { Component } from 'react';\nimport Map from '../Map/Map';\nimport SearchForm from '../SearchForm/SearchForm';\nimport Nav from '../Nav/Nav';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => ({\n  APIkey: state.APIkey,\n});\n\nclass SearchPage extends Component {\n\n  state={\n    url: `https://maps.googleapis.com/maps/api/js?key=${this.props.APIkey}&v=3.exp&libraries=geometry,drawing,places`\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <Nav />\n        <SearchForm url={this.state.url}/>\n          <Map\n            googleMapURL={this.state.url}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px`, maxWidth: \"90%\", margin: \"auto\" }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            location={{ lat: 41, lng: -98 }} />\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(SearchPage);\n","import React, { Component } from 'react';\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker } from 'react-google-maps';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass AddPlaygroundMap extends Component {\n\n    state = {\n        location: {\n            lat: this.props.location.lat,\n            lng: this.props.location.lng,\n        },\n        selectedState: { center_lat: 41, center_lng: -98, zoom: 4 },\n        zoom: 4,\n        mapClicked: false,\n        name: '',\n        description: '',\n        state: '',\n        allStates: []\n    }\n\n    componentDidMount = () => {\n        axios.get('/api/states').then((response) => {\n            this.setState({ allStates: response.data });\n        }).catch((error) => {\n            console.log('Error in GET /states:', error);\n        })\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            location: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            selectedState: { center_lat: event.latLng.lat(), center_lng: event.latLng.lng(), zoom: this.gmap.props.zoom },\n            zoom: Math.max(10, this.gmap.props.zoom), mapClicked: true\n        });\n        // console.log(this.gmap.__reactInternalMemoizedMaskedChildContext.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.zoom);\n    }\n\n    handleChange = (property) => (event) => {\n        this.setState({ [property]: event.target.value });\n    }\n\n    handleStateSelection = (state) => {\n        this.setState({ state: state.postal_code, selectedState: state });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.state && this.state.name) {\n            this.props.dispatch({ type: 'POST_PLAYGROUND', payload: { ...this.state, photoReference: 'https://causeofaction.org/wp-content/uploads/2013/09/Not-available.gif', added_by: this.props.user.id } });\n            // console.log('payload:', { ...this.state, photoReference: 'https://causeofaction.org/wp-content/uploads/2013/09/Not-available.gif', added_by: this.props.user.id });\n        } else {\n            alert('You must enter a name and choose the state');\n        }\n        this.setState({ name: '', description: '', location: { lat: 0, lng: 0 } });\n        toast.success(\"Park submitted!\", {\n            position: toast.POSITION.BOTTOM_RIGHT\n        });\n    }\n\n    render() {\n        return <div>\n            <GoogleMap\n                center={{ lat: Number(this.state.selectedState.center_lat), lng: Number(this.state.selectedState.center_lng) }}\n                zoom={this.state.selectedState.zoom}\n                onClick={this.handleClick}\n                ref={(googleMap) => this.gmap = googleMap}>\n                {this.state.mapClicked && <Marker position={this.state.location} />}\n            </GoogleMap>\n            <br />\n            <div style={{ width: '300px', margin: 'auto', color: 'black' }}>\n                <Select\n                    options={this.state.allStates.map(state => ({ label: state.full_name, value: state.id, selectedState: state }))}\n                    onChange={(option) => this.handleStateSelection(option.selectedState)}\n                // className=\"col-5 select\"\n                />\n            </div>\n            <br />\n\n            {this.state.mapClicked ?\n                <div >\n                    <div className=\"container\">\n                        <div className=\"row justify-content-between\">\n                            <div className=\"col-6 card mx-auto\">\n                                <div style={{ display: 'inline-block', width: '90%', margin: 'auto' }}>\n                                    <span>Latitude</span>\n                                    <input value={this.state.location.lat.toFixed(3)} readOnly=\"readOnly\" className=\"col-sm-3\" />\n                                    <span>Longitude</span>\n                                    <input value={this.state.location.lng.toFixed(3)} readOnly=\"readOnly\" className=\"col-sm-3\" />\n                                </div>\n                                <input onChange={this.handleChange('name')} value={this.state.name} style={{ width: '330px', margin: 'auto' }} placeholder=\"Playground Name\" />\n                                <br />\n                                <textarea rows=\"4\" cols=\"40\"\n                                    form=\"playgroundForm\" onChange={this.handleChange('description')}\n                                    value={this.state.description} placeholder=\"Description\"\n                                    style={{ margin: \"auto\" }} />\n                                <br />\n                                <button className=\"btn btn-secondary\" onClick={this.handleSubmit} >Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div> :\n                <p></p>\n            }\n            <ToastContainer\n                position=\"bottom-right\"\n                autoClose={2000}\n                hideProgressBar\n                newestOnTop\n                closeOnClick\n                rtl={false}\n                pauseOnVisibilityChange={false}\n                draggable={false}\n                pauseOnHover\n            />\n            {/* <pre style={{ color: 'white' }}>{JSON.stringify(this.state, null, 2)}</pre> */}\n        </div>\n    }\n}\n\nexport default connect()(withScriptjs(withGoogleMap(AddPlaygroundMap)));","import React from 'react';\nimport Nav from '../Nav/Nav';\nimport { connect } from 'react-redux';\nimport AddPlaygroundMap from '../AddPlaygroundMap/AddPlaygroundMap';\n\nconst AddPlaygroundPage = (props) => (\n    <div>\n        {props.user.userName ? \n            (<div>\n                <Nav />\n                <AddPlaygroundMap\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${props.APIkey}&v=3.exp&libraries=geometry,drawing,places`}\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `400px`, maxWidth: \"800px\", margin: \"auto\" }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                    location={{ lat: 41, lng: -98 }} \n                    user={props.user}/>\n            </div>) :\n            (<div>\n                <Nav />\n                <p>Login to add a playground</p>\n            </div>)\n        }\n    </div>\n)\n\nconst mapReduxStateToProps = (state) => {\n    return { \n        user: state.user, \n        APIkey: state.APIkey }\n}\n\nexport default connect(mapReduxStateToProps)(AddPlaygroundPage);","import React, { Component } from 'react';\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker } from 'react-google-maps';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { PLAYGROUND_ACTIONS } from '../../redux/actions/playgroundActions';\n\nclass StateMap extends Component {\n    state = {\n        selectedState: { center_lat: 41, center_lng: -98, zoom: 4 },\n        selectedPark: {},\n        description: '',\n        addDescription: false,\n        allStates: [],\n        initialRender: true,\n    }\n    componentDidMount = () => {\n        axios.get('/api/states').then((response) => {\n            this.setState({ allStates: response.data });\n        }).catch((error) => {\n            console.log('Error in GET /states:', error);\n        })\n        if (this.props.usernames.length === 0) {\n            this.props.dispatch({ type: 'GET_USERNAMES' });\n        }\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        //We don't update on initial render or if either the previous US state or \n        //incoming US state has no parks\n        if (this.state.initialRender || nextProps.parks.length * this.props.parks.length === 0) {\n            this.setState({ initialRender: false });\n            return null;\n        }\n        //we don't update if we're switching between states\n        if (this.props.parks[0].state !== nextProps.parks[0].state) {\n            return null;\n        }\n        let descriptionUpdated = false;\n        let currentParkIndex;\n        //we check to see which park was updated\n        for (let i = 0; i < this.props.parks.length; i++) {\n            //we check if number of descriptions increased\n            let thisPropsDescriptions = this.props.parks[i].description || [];\n            let nextPropsDescriptions = nextProps.parks[i].description || [];\n            if (thisPropsDescriptions.length < nextPropsDescriptions.length) {\n                descriptionUpdated = true;\n                currentParkIndex = i;\n            }\n        }//I'm not sure why we need to check this second condition\n        if (descriptionUpdated && this.state.selectedPark.id) {\n            this.setState({ selectedState: this.state.selectedState, selectedPark: nextProps.parks[currentParkIndex] });\n            this.setState({ addDescription: false });\n        }\n    }\n\n    handleChange = (selectedState) => {\n        this.setState({ selectedState: selectedState });\n        this.props.dispatch({ type: 'GET_PARKS_IN_STATE', payload: selectedState.postal_code });\n        this.waitToDisplay();\n    }\n\n    waitToDisplay = () => {\n        setTimeout(()=>{toast.info(`${this.props.parks.length} parks in ${this.state.selectedState.full_name}`, {\n            position: toast.POSITION.BOTTOM_RIGHT\n        })},1000)\n    }\n\n    handleClick = (park) => {\n        this.setState({ selectedPark: park });\n        this.setState({ selectedState: { ...this.state.selectedState, center_lat: Number(park.latitude), center_lng: Number(park.longitude) } });\n    }\n\n    setDescription = (event) => {\n        this.setState({ description: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const firstReview = this.state.selectedPark.description === null;\n        this.props.dispatch({\n            type: 'ADD_DESCRIPTION',\n            payload: {\n                userId: this.props.user.id,\n                park: this.state.selectedPark.id,\n                description: this.state.description,\n                postal_code: this.state.selectedState.postal_code,\n                firstReview: firstReview\n            }\n        });\n        this.setState({ addDescription: false });\n    }\n\n    render() {\n        return (\n            <div >\n                <div style={{ width: '300px', margin: 'auto' }}>\n                    <br />\n                    <Select\n                        options={this.state.allStates.map(state => ({ label: state.full_name, value: state.id, selectedState: state }))}\n                        onChange={(option) => this.handleChange(option.selectedState)}\n                        className=\"select\"\n                    />\n                </div>\n                <GoogleMap\n                    center={{ lat: Number(this.state.selectedState.center_lat), lng: Number(this.state.selectedState.center_lng) }}\n                    zoom={this.state.selectedState.zoom}\n                >\n                    {this.props.parks.map(park => <Marker key={park.id}\n                        position={{ lat: Number(park.latitude), lng: Number(park.longitude) }}\n                        title={park.name}\n                        onClick={() => this.handleClick(park)} />)}\n                </GoogleMap>\n\n                {/* <p style={{ color: 'white' }}>Parks in state: {this.props.parks.length}</p> */}\n\n\n\n                <div className=\"container\">\n                    <div className=\"row justify-content-between\" >\n                        {/* this.state.selectedPark.name && */}\n                        {this.state.selectedPark.name &&\n                            <div className=\"col-5 card\">\n                                <h4 style={{ textAlign: 'center' }}>{this.state.selectedPark.name}</h4>\n                                <img src={this.state.selectedPark.photo_reference} style={{ maxWidth: \"300px\", margin: 'auto' }} />\n                                <br />\n                            </div>}\n                        {/* this.state.selectedPark.description && */}\n                        {this.state.selectedPark.name ?\n                            <div className=\"col-6 card\" style={{ color: 'black' }}>\n                                <h3 style={{ textAlign: 'center' }}>User Reviews</h3>\n                                {/* show all descriptions */}\n                                {this.state.selectedPark.description &&\n                                    <div>\n                                        <table><tbody style={{ color: 'black' }}>\n                                            {this.state.selectedPark.description.map((text, index) => (<div><tr key={index}>\n                                                <td><b><font size=\"+1\">\n                                                    {this.props.usernames[this.state.selectedPark.user_id[index] - 1]}\n                                                </font></b></td></tr>\n                                                <tr key={(index + 1) * 100}><td><font size=\"-1\">{text}</font></td></tr>\n                                                <tr key={(index + 2) * 200}><td></td></tr></div>))}\n                                        </tbody></table>\n                                    </div>}\n                                {!this.state.addDescription &&\n                                    <button className=\"btn btn-secondary\" onClick={() => this.setState({ addDescription: true })}\n                                    >Add a review</button>}\n                                {this.state.addDescription &&\n                                    <div><textarea rows=\"4\" cols=\"40\" onChange={this.setDescription}></textarea>\n                                        <button onClick={this.handleSubmit} className=\"btn btn-secondary\">Submit</button></div>}\n                            </div> :\n                            <noscript></noscript>}\n                        <ToastContainer\n                            position=\"bottom-right\"\n                            autoClose={2000}\n                            hideProgressBar\n                            newestOnTop\n                            closeOnClick\n                            rtl={false}\n                            pauseOnVisibilityChange={false}\n                            draggable={false}\n                            pauseOnHover\n                        />\n                    </div>\n                </div>\n\n                {/* <pre style={{color: 'white'}}>{JSON.stringify(this.props,null,2)}</pre> */}\n\n            </div>\n\n\n            // {this.props.user.id === this.state.selectedPark.added_by &&\n            //     <p>You added this park!</p>} \n            //          Later we can set it up so that parks reviewed by the user show up in a different color \n\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        usernames: state.usernames,\n        parks: state.parksInState,\n    }\n}\n\nexport default connect(mapStateToProps)(withScriptjs(withGoogleMap(StateMap)));","import React, { Component } from 'react';\nimport Nav from '../Nav/Nav';\nimport StateMap from '../StateMap/StateMap';\nimport {connect} from 'react-redux'; \n\nclass searchByStatePage extends Component {\n    \n    render() {\n        return <div>\n            <Nav />\n            <StateMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${this.props.APIkey}&v=3.exp&libraries=places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px`, maxWidth: \"800px\", margin: \"auto\" }} />}\n                mapElement={<div style={{ height: `100%` }} />} \n                />\n            \n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        APIkey: state.APIkey,\n    }\n}\n\nexport default connect(mapStateToProps)(searchByStatePage);","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { USER_ACTIONS } from './redux/actions/userActions'\n\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\n\nimport Header from './components/Header/Header';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport RegisterPage from './components/RegisterPage/RegisterPage';\nimport UserPage from './components/UserPage/UserPage';\nimport SearchPage from './components/SearchPage/SearchPage';\nimport AddPlaygroundPage from './components/AddPlaygroundPage/AddPlaygroundPage';\nimport SearchByStatePage from './components/searchByStatePage/searchByStatePage';\n// import background from './styles/cool_playground.JPG';\n\nimport './styles/main.css';\n\nclass App extends Component {\n\n  //Constructor is the best place to initialize dependent data\n  //Will fire before render, insuring that our call is at least pending\n  constructor(props) {\n    super(props);\n    props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    props.dispatch({type: 'GET_API_KEY'});\n  }\n\n  render() {\n    return (\n        <div>\n          <Header title=\"Tiny Stretch\" />\n          <Router>\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/home\" />\n              <Route\n                path=\"/home\"\n                component={LoginPage}\n              />\n              <Route\n                path=\"/register\"\n                component={RegisterPage}\n              />\n              <ProtectedRoute\n                path=\"/user\"\n                component={UserPage}\n              />\n              <Route\n                path=\"/search\"\n                component={SearchPage}\n              />\n              <Route\n                path=\"/add_playground\"\n                component={AddPlaygroundPage}\n              />\n              <Route\n                path=\"/search_by_state\"\n                component={SearchByStatePage}\n              />\n              {/* OTHERWISE (no path!) */}\n              <Route render={() => <h1>404</h1>} />\n\n            </Switch>\n          </Router>\n        </div>\n    )\n  }\n}\n\nexport default connect()(App);\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callUser } from '../requests/userRequests';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    // sets that the async request is in progress\n    yield put({ type: USER_ACTIONS.REQUEST_START });\n    const user = yield callUser();\n    yield put({\n      type: USER_ACTIONS.SET_USER,\n      user,\n    });\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n    yield put({\n      type: USER_ACTIONS.USER_FETCH_FAILED,\n      message: error.data || \"FORBIDDEN\",\n    });\n  }\n}\n/*\n  Starts fetchUser on each dispatched `FETCH_USER` action.\n  Allows concurrent fetches of user.\n*/\n// function* userSaga() {\n//   yield takeEvery('FETCH_USER', fetchUser);\n// }\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"FETCH_USER\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* userSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_USER, fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\n\n//calls /user on our server to retrieve user data\nexport function callUser() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user', config)\n    .then(response => response.data)\n    .catch((error) => { throw error.response || error; });\n}\n\nexport function placeholder() {\n  console.log('hi');\n}\n","import axios from 'axios';\n\nexport function callLogin(payload) {\n  const body = ({\n    username: payload.username,\n    password: payload.password,\n  });\n\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.post('api/user/login', body, config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n\nexport function callLogout() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user/logout', config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callLogin, callLogout } from '../requests/loginRequests';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    yield put({ type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR });\n    // sets that we are starting an async request\n    yield put({ type: LOGIN_ACTIONS.REQUEST_START });\n    yield callLogin(action.payload);\n    \n    yield put({\n      type: USER_ACTIONS.FETCH_USER,\n    });\n    \n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    \n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    if (error.status === 401) {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED,\n        message: error.message,\n      });\n    } else {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE,\n        message: error.message,\n      });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    yield callLogout(action);\n    yield put({\n      type: USER_ACTIONS.UNSET_USER,\n    });\n  } catch (error) {\n    console.log('LOGOUT FAILED -- CHECK YOUR SERVER', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest(LOGIN_ACTIONS.LOGIN, loginUser);\n  yield takeLatest(LOGIN_ACTIONS.LOGOUT, logoutUser);\n}\n\nexport default loginSaga;\n","import axios from 'axios';\n\n/*\nlet xhr = new XMLHttpRequest();\nxhr.open('GET', `https://maps.googleapis.com/maps/api/js?key=${APIkey}&v=3.exp&libraries=geometry,drawing,places`);\nxhr.send();\n\nconst playgroundObject = yield axios('/', {\n            headers: { 'Access-Control-Allow-Origin': 'http://10.100.100.158/3000' },\n            method: 'GET',\n            // url: `https://maps.googleapis.com/maps/api/place/textsearch/json?type=park&keyword=playground&location=42,-90&radius=10000&key=${APIkey}`,\n            url: `https://maps.googleapis.com/maps/api/place/textsearch/json?type=park&keyword=playground&location=${action.payload.lat},${action.payload.lng}&radius=${Math.max(10000,action.radius)}&key=${APIkey}`,\n          })\n*/\n\n//we use one of these web proxies to deal with the CORS errors\nlet proxies = ['https://cors-anywhere.herokuapp.com/','https://cors.io/?','https://cors-proxy.htmldriven.com/?url='];\n//this is a nearby search\nexport const searchNearby =  (lat, lng, radius, proxyIndex, APIkey) => {\n    // return axios.get(`https://cors.io/?https://maps.googleapis.com/maps/api/place/nearbysearch/json?type=park&keyword=playground&location=${lat},${lng}&radius=${Math.max(10000,radius)}&key=${APIkey}`);\n    return axios.get(`${proxies[proxyIndex]}https://maps.googleapis.com/maps/api/place/nearbysearch/json?type=park&keyword=playground&location=${lat},${lng}&radius=${Math.max(10000,radius)}&key=${APIkey}`);\n\n    // return axios.get(xhr.send());\n}\n\n//this is a text search\n// export function searchNearby(lat,lng,radius){\n//     return axios.get(`https://cors.io/?https://maps.googleapis.com/maps/api/place/textsearch/json?query=playground&location=${lat},${lng}&radius=${Math.max(10000,radius)}&key=${APIkey}`);\n// }\n","import axios from 'axios';\nimport {put, takeEvery, takeLatest, select} from 'redux-saga/effects';\nimport distanceBetweenPoints from '../../auxiliaryFunctions/distanceBetweenPoints';\nimport {searchNearby} from '../requests/playgroundRequests';\n\nconst trimDownPlayground = (playground) => {\n    let photoReference = '';\n            if(playground.photos){\n                photoReference = playground.photos[0].photo_reference;\n            }\n    return {name: playground.name, location: playground.geometry.location, id: playground.place_id, types: playground.types, photoReference: photoReference};\n}\n\nfunction* searchParks (action) {\n    try{\n        const proxyToUse = yield select(state => state.proxy);\n        const APIkey = yield select(state => state.APIkey);\n        const playgroundObject = yield searchNearby(action.payload.lat, action.payload.lng, action.radius, proxyToUse, APIkey);\n\n        // const playgroundObject = yield axios('/', {\n        //     headers: { 'Access-Control-Allow-Origin': 'http://localhost:3000', 'Access-Control-Allow-Methods': 'GET' },\n        //     method: 'GET',\n        //     // url: `https://maps.googleapis.com/maps/api/place/textsearch/json?type=park&keyword=playground&location=42,-90&radius=10000&key=API_KEY`,\n        //     url: `https://maps.googleapis.com/maps/api/place/nearbysearch/json?type=park&keyword=playground&location=${action.payload.lat},${action.payload.lng}&radius=${Math.max(10000,action.radius)}&key=API_KEY`,\n        //   })\n\n        const allInfoOnPlaygrounds = playgroundObject.data.results;\n        //allInfoOnPlaygrounds is an array of objects with a ton of properties,\n        //most of which we don't care about. So we trim down to just what we need\n        let playgrounds = [];\n        if(allInfoOnPlaygrounds.length>0){\n            playgrounds = allInfoOnPlaygrounds.map(playground => trimDownPlayground(playground));\n        }\n        let filteredPlaygrounds = playgrounds.filter( pg => distanceBetweenPoints(pg.location, action.payload) < action.radius && !pg.types.includes('campground') );\n        yield put({type: 'SET_PLAYGROUNDS', payload: filteredPlaygrounds});\n    } catch (error) {\n        console.log('Error in searchParks:',error);\n    }\n}\n\n\nfunction* postPlayground (action) {\n    try{\n        yield axios.post('/api/park', action.payload).then((response)=>{\n            console.log('Response:',response);\n        })\n    }catch(error){\n        console.log('Error in postPlayground:',error);\n    }\n}\n\nfunction* addDescription (action) {\n    try{\n        if(action.payload.firstReview){\n            //if this is the first review, we make an entry in TABLE park_description\n            yield axios.post('/api/park/description', action.payload);\n        }\n        else{\n            //otherwise we update TABLE park_description\n            yield axios.put(`/api/park`,action.payload);\n        }\n        yield getParksInState( {payload: action.payload.postal_code} );\n    }catch(error){\n        console.log('Error in addDescription:',error);\n    }\n}\n\nfunction* getParksInState (action) {\n    try{\n        const response = yield axios.get(`/api/park/${action.payload}`);\n        const parksInState = response.data;\n        yield put({type: 'SET_PARKS', payload: parksInState});\n    }catch(error){\n        console.log('Error in getParksInState');\n    }\n}\n\nfunction* playgroundSaga () {\n    yield takeEvery('SEARCH_PLAYGROUNDS', searchParks);\n    yield takeLatest('POST_PLAYGROUND', postPlayground);\n    yield takeEvery('ADD_DESCRIPTION', addDescription);\n    yield takeEvery('GET_PARKS_IN_STATE', getParksInState);\n}\n\n\nexport default playgroundSaga;","import axios from 'axios';\nimport {put, takeEvery} from 'redux-saga/effects';\n\n\nfunction* getUsernames(){\n    try{\n        const response = yield axios.get('/api/user/usernames');\n        //we just want an array of usernames\n        const usernames = response.data.map(usernameObject => usernameObject.username);\n        yield put({type: 'SET_USERNAMES', payload: usernames});\n    }catch(error){\n        console.log('Error getting usernames:',error);\n    }\n}\n\nfunction* usernamesSaga(){\n    yield takeEvery('GET_USERNAMES',getUsernames);\n}\n\nexport default usernamesSaga;","import axios from 'axios';\nimport {put, takeEvery} from 'redux-saga/effects';\n\n\nfunction* getAPIkey(){\n    try{\n        const response = yield axios.get('/api/user/key');\n        const APIkey = response.data;\n        yield put({type: 'SET_API_KEY', payload: APIkey});\n    }catch(error){\n        console.log('Error getting API key:',error);\n    }\n}\n\nfunction* APIkeySaga(){\n    yield takeEvery('GET_API_KEY',getAPIkey);\n}\n\nexport default APIkeySaga;","import { all } from 'redux-saga/effects';\nimport userSaga from './userSaga';\nimport loginSaga from './loginSaga';\nimport playgroundSaga from './playgroundSaga';\nimport usernamesSaga from './usernamesSaga';\nimport APIkeySaga from './APIkeySaga';\n\n\n\nexport default function* rootSaga() {\n  yield all([\n    userSaga(),\n    loginSaga(),\n    playgroundSaga(),\n    usernamesSaga(),\n    APIkeySaga(),\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport reducer from './redux/reducers'; // imports ./redux/reducers/index.js\n\nimport App from './App';\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\n// Initializing to an empty object, but here is where you could\n// preload your redux state with initial values (from localStorage, perhaps)\nconst preloadedState = {};\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n\n// flag to only use the logger if in development mode\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n  reducer,\n  preloadedState,\n  applyMiddleware(...middlewares),\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}